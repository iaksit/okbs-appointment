# https://docs.docker.com/compose/compose-file/#compose-file-structure-and-examples
version: '3.5'

networks:
  frontend:
  backend:

services:

  database:
    image: mariadb:10
    command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=veryhardpassword
      - MYSQL_DATABASE=okbs
      - MYSQL_USER=aaksit
      - MYSQL_PASSWORD=veryhardpassword
    volumes:
      - "db-data:/var/lib/mysql:rw"
      - "${PWD}/okbs.sql:/docker-entrypoint-initdb.d/okbs.sql:ro"
    #ports:
    #  - "3306:3306"
    networks:
      - backend
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure


  application:
    image: okbs-appointment
    build:
      context: .
      dockerfile: /docker-stack/Dockerfile
    ports:
      - "9000:9000"
    depends_on:
      - database
    networks:
      - frontend
      - backend
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure


  nginx:
    image: nginx:1.15
    volumes:
      - "${PWD}/docker-stack/config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "${PWD}/docker-stack/config/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro"
     # - "${PWD}/.sslc9ekey/bundle.crt:/etc/ssl/certs/server.crt:ro"
     # - "${PWD}/.sslc9ekey/IYTEJOKERSSLSertifika.key:/etc/ssl/certs/server.key:ro"
     # - "${PWD}/.sslc9ekey/dhparam.pem:/etc/ssl/certs/dhparam.pem:ro"
      - "${PWD}/src:/var/www/html"
    ports:
      - "80:80"
     # - "443:443"
    networks:
      - frontend
    depends_on:
      - application
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure


  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - 8081:80
    networks:
      - backend
    depends_on:
      - database
    environment:
      - PMA_ARBITRARY=1
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

volumes:
  db-data: